name: build+tests

on:
  push:
    branches:
      - master
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: 'write'
  id-token: 'write'

jobs:
  build:
    runs-on: ubuntu-22.04
    env:
      GOPROXY: "https://proxy.golang.org,direct"
      GONOSUMDB: "github.com/ioriver/*"
      GOPRIVATE: "github.com/ioriver"
    steps:
      - name: Source code checkout
        uses: actions/checkout@v4

      - name: Setup Go
        if: success()
        uses: actions/setup-go@v5
        with:
          go-version: '1.22.3'
          cache: true

      - name: Install dependencies
        if: success()
        run: |
          go get

      - name: Install golangci-lint
        if: success()
        run: |
          go install github.com/golangci/golangci-lint/cmd/golangci-lint@v1.52.2

      - name: Lint code
        if: success()
        run: |
          golangci-lint run --fast

      - name: Build
        if: success()
        run: |
          go build ./...

      - name: Test
        if: success()
        run: |
          go test ./...

      - name: Make sweep(Terraform only)
        if: success()
        env:
          IORIVER_API_TOKEN: ${{ secrets.IORIVER_API_TOKEN }}
          IORIVER_TEST_SERVICE_ID: ${{ secrets.IORIVER_TEST_SERVICE_ID }}
          IORIVER_TEST_DOMAIN: ${{ secrets.IORIVER_TEST_DOMAIN }}
          IORIVER_TEST_CERT_ID: ${{ secrets.IORIVER_TEST_CERT_ID }}
          IORIVER_TEST_FASTLY_API_TOKEN: ${{ secrets.IORIVER_TEST_FASTLY_API_TOKEN }}
          IORIVER_TEST_SERVICE_PROVIDER_ID: ${{ secrets.IORIVER_TEST_SERVICE_PROVIDER_ID }}
          IORIVER_TEST_DEFAULT_TRAFFIC_POLICY_ID: ${{ secrets.IORIVER_TEST_DEFAULT_TRAFFIC_POLICY_ID }}
          IORIVER_TEST_ORIGIN_ID: ${{ secrets.IORIVER_TEST_ORIGIN_ID }}
          IORIVER_TEST_DOMAIN_ID: ${{ secrets.IORIVER_TEST_DOMAIN_ID }}
          IORIVER_TEST_DEFAULT_BEHAVIOR_ID: ${{ secrets.IORIVER_TEST_DEFAULT_BEHAVIOR_ID }}
        run: |
          make sweep

      - name: Make testacc(Terraform only)
        if: success()
        env:
          IORIVER_API_TOKEN: ${{ secrets.IORIVER_API_TOKEN }}
          IORIVER_TEST_SERVICE_ID: ${{ secrets.IORIVER_TEST_SERVICE_ID }}
          IORIVER_TEST_DOMAIN: ${{ secrets.IORIVER_TEST_DOMAIN }}
          IORIVER_TEST_CERT_ID: ${{ secrets.IORIVER_TEST_CERT_ID }}
          IORIVER_TEST_FASTLY_API_TOKEN: ${{ secrets.IORIVER_TEST_FASTLY_API_TOKEN }}
          IORIVER_TEST_SERVICE_PROVIDER_ID: ${{ secrets.IORIVER_TEST_SERVICE_PROVIDER_ID }}
          IORIVER_TEST_DEFAULT_TRAFFIC_POLICY_ID: ${{ secrets.IORIVER_TEST_DEFAULT_TRAFFIC_POLICY_ID }}
          IORIVER_TEST_ORIGIN_ID: ${{ secrets.IORIVER_TEST_ORIGIN_ID }}
          IORIVER_TEST_DOMAIN_ID: ${{ secrets.IORIVER_TEST_DOMAIN_ID }}
          IORIVER_TEST_DEFAULT_BEHAVIOR_ID: ${{ secrets.IORIVER_TEST_DEFAULT_BEHAVIOR_ID }}
        run: |
          make testacc

      - name: Versioning
        if: success()
        uses: go-semantic-release/action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          npm install -g go-semantic-release
          go-semantic-release --provider-opt "slug=ioriver/terraform-provider-ioriver" --allow-initial-development-versions --show-progress

      - name: Trigger Master Workflow
        if: success()
        env:
          PAT_TOKEN: ${{ secrets.PAT_TOKEN }}
        run: |
          # Use the GitHub API to trigger the target workflow
          curl -X POST -u $PAT_TOKEN: \
          -H "Accept: application/vnd.github.v3+json" \
          https://api.github.com/repos/${{ github.repository }}/actions/workflows/release.yml/dispatches \
          -d '{"ref":"master"}'